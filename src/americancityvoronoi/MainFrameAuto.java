/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package americancityvoronoi;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import math.IntVector2;


/**
 *
 * @author rollersimmer
 */
public class MainFrameAuto extends javax.swing.JFrame {
    
    /**
     * the list of cities
     */
    CityList cities;
    public PrintStream outputStream;
    ByteArrayOutputStream baos;
    public String outputBuffer;

/**
     * Creates new form AmericanCityVoronoiFrame
     */
    public MainFrameAuto() {
        baos = new ByteArrayOutputStream();
        outputStream=new PrintStream(baos);
        outputBuffer = new String(baos.toByteArray(), StandardCharsets.UTF_8);
        System.setOut(outputStream);
        System.out.print("System output is now redirected.\n");
        initCityList();
        initComponents();        
        shouldUseReachCheckBox.setSelected(CityVoronoiComparer.SHOULD_REACH_PLAY_A_FACTOR);
        shouldUseTaxicabDistCheckBox.setSelected(IntVector2.IS_DEFAULT_DIST_TAXI);

        initDrawer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        textAreaScrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        drawerScrollPane = new javax.swing.JScrollPane();
        drawer = new americancityvoronoi.Drawer();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        minPopSpinner = new javax.swing.JSpinner();
        shouldUseReachCheckBox = new javax.swing.JCheckBox();
        shouldUseTaxicabDistCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("American City Voronoi");

        jButton2.setText("Save Image");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        textAreaScrollPane.setViewportView(textArea);

        drawerScrollPane.setAutoscrolls(true);
        drawerScrollPane.setViewportView(drawer);

        jButton1.setText("Draw");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Min Pop");

        minPopSpinner.setModel(new javax.swing.SpinnerNumberModel(500000, 100000, 20000000, 100000));
        minPopSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(minPopSpinner, ""));
        minPopSpinner.setFocusable(false);
        minPopSpinner.setOpaque(false);
        minPopSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minPopSpinnerStateChanged(evt);
            }
        });

        shouldUseReachCheckBox.setText("Use Reach?");
        shouldUseReachCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shouldUseReachCheckBoxActionPerformed(evt);
            }
        });

        shouldUseTaxicabDistCheckBox.setText("Use Taxicab Distance?");
        shouldUseTaxicabDistCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shouldUseTaxicabDistCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(drawerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minPopSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(shouldUseReachCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shouldUseTaxicabDistCheckBox)))
                .addGap(0, 390, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(minPopSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shouldUseReachCheckBox)
                    .addComponent(shouldUseTaxicabDistCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textAreaScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                    .addComponent(drawerScrollPane))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        drawer.saveImage();
        outputBuffer = new String(baos.toByteArray(), StandardCharsets.UTF_8);
        textArea.setText(outputBuffer);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        initCityList();
        initDrawer();
        drawer.updatePaint();
        outputBuffer = new String(baos.toByteArray(), StandardCharsets.UTF_8);
        textArea.setText(outputBuffer);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void minPopSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minPopSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_minPopSpinnerStateChanged

    private void shouldUseReachCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shouldUseReachCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shouldUseReachCheckBoxActionPerformed

    private void shouldUseTaxicabDistCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shouldUseTaxicabDistCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shouldUseTaxicabDistCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrameAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrameAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrameAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrameAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrameAuto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private americancityvoronoi.Drawer drawer;
    private javax.swing.JScrollPane drawerScrollPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner minPopSpinner;
    private javax.swing.JCheckBox shouldUseReachCheckBox;
    private javax.swing.JCheckBox shouldUseTaxicabDistCheckBox;
    private javax.swing.JTextArea textArea;
    private javax.swing.JScrollPane textAreaScrollPane;
    // End of variables declaration//GEN-END:variables

    private void updateLargePopThresholdFromSpinner() {
        if(minPopSpinner==null) 
            return;
        Object spinnerVal=this.minPopSpinner.getValue();
        String minPopString=spinnerVal.toString();
        int minPop=Integer.parseInt(minPopString);
        NorthAmericanCityListFactory.LARGE_POP_THRESHOLD=minPop/100000;
    }

    private void initCityList() {        
        updateLargePopThresholdFromSpinner();
        cities=NorthAmericanCityListFactory.create();
        cities.print();
    }

    private void initDrawer() {
        IntVector2.IS_DEFAULT_DIST_TAXI=shouldUseTaxicabDistCheckBox.isSelected();
        CityVoronoiComparer.SHOULD_REACH_PLAY_A_FACTOR=shouldUseReachCheckBox.isSelected();
        this.drawer.init(cities);
    }

}
